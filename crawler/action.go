package crawler

import (
	"context"
	"fmt"
	"github.com/chromedp/cdproto/input"
	"github.com/chromedp/cdproto/page"
	"github.com/chromedp/cdproto/runtime"
	"github.com/chromedp/chromedp"
	"github.com/chromedp/chromedp/kb"
	"math"
	"strings"
	"time"
)

// WaitRootNodeVisible 等待根节点可见
//   - rootNodeID html根节点ID
func WaitRootNodeVisible(rootNodeID string) chromedp.Action {
	return chromedp.WaitVisible(rootNodeID, chromedp.ByID)
}

// ScrollToBottom 下拉滚动条到最底部
//
// 通过JS下拉网页滚动条到最底部以触发一些滚动加载的逻辑
func ScrollToBottom() chromedp.Action {
	return chromedp.EvaluateAsDevTools("window.scrollTo(0,document.body.scrollHeight);", nil)
}

// IsSoft404NotFound 读取html的meta头判断当前页面是否为一个软404页面
//
//		前端需遵循软404页面通过js添加<meta name="robots" content="noindex">
//
//		- result 执行JS获取meta后返回的结果对象引用
//
//	 判断是否有有添加软404的meta标记 result != nil && string(is404.Value) == "true"
func IsSoft404NotFound(result **runtime.RemoteObject) chromedp.Action {
	var js = `
(function() {
	_meta = document.querySelector('meta[name=robots]');
	if (_meta) {
		return _meta.getAttribute('content') === 'noindex';
	}
	return false;
})();
`
	return chromedp.EvaluateAsDevTools(js, result)
}

// WaitDefineMetaReady 等待自定义meta标签出现
//   - metaName meta标签name
//
// 对于SPA页面，可以约定SPA渲染完毕后往head标签里添加一个meta标签 例如：<meta name="metaName" content="true">
// 然后crawler监听是否出现这个标签以侦测渲染完毕
// 每50毫秒侦测1次直到10秒后超时
func WaitDefineMetaReady(metaName string) chromedp.Action {
	return chromedp.Poll(
		"document.querySelector('meta[name="+metaName+"]') != null",
		nil,
		chromedp.WithPollingInterval(50*time.Millisecond),
		chromedp.WithPollingTimeout(10*time.Second),
	)
}

// GetLastURL 页面可能会出现Redirect，用于获取最后停留页面URL
//   - lastUrl 最后停留页面的URL
func GetLastURL(lastUrl *string) chromedp.Action {
	return chromedp.Location(lastUrl)
}

// ClickDotXy 点击
func ClickDotXy(x, y float64) chromedp.Action {
	return chromedp.MouseClickXY(x, y)
}

// MouseMoveTo 鼠标移动到 (x,y) 坐标，内部添加上下100px的抖动
func MouseMoveTo(x, y float64) chromedp.Action {
	return chromedp.ActionFunc(func(ctx context.Context) error {
		x1 := x + RandFloat64(5)
		y1 := y + RandFloat64(5)
		_ = input.DispatchMouseEvent(input.MouseMoved, x, y).Do(ctx)
		_ = chromedp.Sleep(time.Duration(RandInt64(5)) * time.Millisecond).Do(ctx) // 添加随机延迟
		_ = input.DispatchMouseEvent(input.MouseMoved, x1, y1).Do(ctx)
		return nil
	})
}

// RandMoveMouse 按多条预定义轨迹坐标移动
func RandMoveMouse() chromedp.Action {
	var trajectory = [][]struct{ x, y float64 }{
		{
			{x: 46, y: 48}, {x: 47, y: 48}, {x: 48, y: 48}, {x: 49, y: 48}, {x: 50, y: 48}, {x: 52, y: 49}, {x: 54, y: 50}, {x: 56, y: 50}, {x: 60, y: 52}, {x: 67, y: 55}, {x: 73, y: 58}, {x: 82, y: 63}, {x: 97, y: 74}, {x: 111, y: 85}, {x: 125, y: 98}, {x: 132, y: 104}, {x: 145, y: 116}, {x: 156, y: 128}, {x: 161, y: 133}, {x: 169, y: 143}, {x: 176, y: 151}, {x: 182, y: 159}, {x: 186, y: 166}, {x: 190, y: 173}, {x: 193, y: 179}, {x: 196, y: 185}, {x: 198, y: 191}, {x: 199, y: 197}, {x: 201, y: 202}, {x: 201, y: 204}, {x: 202, y: 207}, {x: 202, y: 210}, {x: 203, y: 212}, {x: 203, y: 214}, {x: 203, y: 215}, {x: 204, y: 216}, {x: 204, y: 217}, {x: 204, y: 218}, {x: 204, y: 219}, {x: 204, y: 220}, {x: 205, y: 222}, {x: 205, y: 223}, {x: 205, y: 224}, {x: 206, y: 225}, {x: 206, y: 226}, {x: 206, y: 227},
		},
		{
			{x: 764, y: 297}, {x: 761, y: 294}, {x: 757, y: 289}, {x: 752, y: 283}, {x: 748, y: 277}, {x: 733, y: 241}, {x: 731, y: 232}, {x: 728, y: 221}, {x: 727, y: 210}, {x: 726, y: 205}, {x: 724, y: 189}, {x: 723, y: 184}, {x: 723, y: 168}, {x: 723, y: 163}, {x: 723, y: 154}, {x: 723, y: 147}, {x: 723, y: 140}, {x: 723, y: 132}, {x: 723, y: 129}, {x: 723, y: 126}, {x: 724, y: 124}, {x: 725, y: 123}, {x: 726, y: 122}, {x: 726, y: 121}, {x: 727, y: 120}, {x: 728, y: 119}, {x: 729, y: 118}, {x: 731, y: 117}, {x: 732, y: 116}, {x: 734, y: 115}, {x: 737, y: 114}, {x: 740, y: 113}, {x: 743, y: 112}, {x: 746, y: 111}, {x: 750, y: 110}, {x: 753, y: 110}, {x: 757, y: 109}, {x: 761, y: 109}, {x: 767, y: 109}, {x: 772, y: 108}, {x: 778, y: 108}, {x: 784, y: 108}, {x: 790, y: 108}, {x: 796, y: 108}, {x: 803, y: 108}, {x: 809, y: 108}, {x: 815, y: 108}, {x: 822, y: 108}, {x: 828, y: 109}, {x: 835, y: 109}, {x: 846, y: 110}, {x: 850, y: 111}, {x: 857, y: 112}, {x: 863, y: 113}, {x: 869, y: 113}, {x: 875, y: 114}, {x: 880, y: 115}, {x: 886, y: 115}, {x: 892, y: 116}, {x: 898, y: 116}, {x: 904, y: 117}, {x: 909, y: 117}, {x: 911, y: 118}, {x: 919, y: 118}, {x: 921, y: 119}, {x: 927, y: 119}, {x: 932, y: 120}, {x: 935, y: 120}, {x: 940, y: 120}, {x: 943, y: 120}, {x: 948, y: 121}, {x: 949, y: 121}, {x: 955, y: 121}, {x: 958, y: 121}, {x: 960, y: 122}, {x: 965, y: 122}, {x: 968, y: 122}, {x: 973, y: 122}, {x: 974, y: 122}, {x: 978, y: 122}, {x: 983, y: 122}, {x: 987, y: 123}, {x: 988, y: 123}, {x: 990, y: 123}, {x: 993, y: 124}, {x: 995, y: 124}, {x: 996, y: 124}, {x: 997, y: 124}, {x: 998, y: 125},
		},
		{
			{x: 679, y: 29}, {x: 679, y: 32}, {x: 679, y: 34}, {x: 679, y: 36}, {x: 679, y: 38}, {x: 679, y: 40}, {x: 679, y: 42}, {x: 680, y: 44}, {x: 680, y: 45}, {x: 680, y: 47}, {x: 680, y: 49}, {x: 680, y: 51}, {x: 680, y: 56}, {x: 680, y: 61}, {x: 681, y: 67}, {x: 682, y: 76}, {x: 682, y: 86}, {x: 683, y: 100}, {x: 684, y: 114}, {x: 685, y: 130}, {x: 687, y: 146}, {x: 688, y: 161}, {x: 689, y: 176}, {x: 691, y: 190}, {x: 691, y: 203}, {x: 692, y: 217}, {x: 692, y: 222}, {x: 692, y: 232}, {x: 692, y: 241}, {x: 692, y: 249}, {x: 692, y: 255}, {x: 693, y: 261}, {x: 693, y: 266}, {x: 694, y: 271}, {x: 695, y: 276}, {x: 696, y: 279}, {x: 697, y: 283}, {x: 698, y: 284}, {x: 700, y: 289}, {x: 701, y: 290}, {x: 703, y: 293}, {x: 704, y: 295}, {x: 706, y: 297}, {x: 707, y: 299}, {x: 709, y: 300}, {x: 710, y: 302}, {x: 711, y: 303}, {x: 712, y: 304}, {x: 712, y: 305}, {x: 713, y: 306}, {x: 714, y: 306}, {x: 714, y: 307}, {x: 715, y: 307},
		},
		{
			{x: 1132, y: 36}, {x: 1133, y: 36}, {x: 1139, y: 40}, {x: 1150, y: 50}, {x: 1161, y: 60}, {x: 1174, y: 73}, {x: 1189, y: 87}, {x: 1207, y: 105}, {x: 1226, y: 122}, {x: 1244, y: 140}, {x: 1262, y: 157}, {x: 1270, y: 165}, {x: 1284, y: 180}, {x: 1296, y: 193}, {x: 1301, y: 198}, {x: 1310, y: 208}, {x: 1317, y: 215}, {x: 1324, y: 222}, {x: 1326, y: 224}, {x: 1329, y: 227}, {x: 1332, y: 231}, {x: 1334, y: 233}, {x: 1336, y: 235}, {x: 1337, y: 236}, {x: 1338, y: 237}, {x: 1338, y: 238}, {x: 1337, y: 238}, {x: 1333, y: 238}, {x: 1321, y: 236}, {x: 1306, y: 232}, {x: 1268, y: 224}, {x: 1223, y: 219}, {x: 1172, y: 212}, {x: 1062, y: 205}, {x: 976, y: 204}, {x: 885, y: 204}, {x: 789, y: 204}, {x: 690, y: 216}, {x: 599, y: 233}, {x: 556, y: 242}, {x: 475, y: 260}, {x: 404, y: 276}, {x: 382, y: 279}, {x: 365, y: 282}, {x: 331, y: 285}, {x: 323, y: 285}, {x: 310, y: 285}, {x: 300, y: 284},
		},
		{
			{x: 663, y: 206}, {x: 664, y: 210}, {x: 666, y: 215}, {x: 670, y: 221}, {x: 674, y: 228}, {x: 678, y: 234}, {x: 682, y: 240}, {x: 689, y: 251}, {x: 693, y: 256}, {x: 704, y: 271}, {x: 707, y: 274}, {x: 713, y: 281}, {x: 718, y: 287}, {x: 723, y: 292}, {x: 727, y: 295}, {x: 729, y: 296}, {x: 732, y: 299}, {x: 738, y: 302}, {x: 740, y: 303}, {x: 743, y: 305}, {x: 746, y: 306}, {x: 751, y: 308}, {x: 755, y: 309}, {x: 760, y: 311}, {x: 766, y: 312}, {x: 772, y: 314}, {x: 779, y: 316}, {x: 791, y: 318}, {x: 799, y: 319}, {x: 803, y: 320}, {x: 811, y: 320}, {x: 819, y: 320}, {x: 831, y: 320}, {x: 840, y: 320}, {x: 850, y: 320}, {x: 860, y: 320}, {x: 871, y: 320}, {x: 881, y: 320}, {x: 895, y: 320}, {x: 900, y: 320}, {x: 910, y: 320}, {x: 927, y: 320}, {x: 932, y: 320}, {x: 947, y: 318}, {x: 957, y: 317}, {x: 960, y: 316}, {x: 968, y: 315}, {x: 975, y: 315}, {x: 981, y: 314}, {x: 986, y: 313}, {x: 992, y: 313}, {x: 998, y: 313}, {x: 1004, y: 313}, {x: 1009, y: 313}, {x: 1014, y: 312}, {x: 1019, y: 312}, {x: 1023, y: 312}, {x: 1028, y: 311}, {x: 1032, y: 311}, {x: 1036, y: 310}, {x: 1040, y: 310}, {x: 1044, y: 309}, {x: 1047, y: 308}, {x: 1050, y: 307}, {x: 1052, y: 307}, {x: 1055, y: 306}, {x: 1057, y: 306}, {x: 1059, y: 305}, {x: 1061, y: 305}, {x: 1063, y: 304}, {x: 1068, y: 303}, {x: 1070, y: 302}, {x: 1071, y: 302}, {x: 1074, y: 301}, {x: 1076, y: 301}, {x: 1077, y: 301}, {x: 1079, y: 300}, {x: 1081, y: 300}, {x: 1083, y: 300}, {x: 1084, y: 300}, {x: 1085, y: 300}, {x: 1087, y: 300}, {x: 1088, y: 300}, {x: 1089, y: 300}, {x: 1090, y: 300}, {x: 1091, y: 300}, {x: 1092, y: 300}, {x: 1093, y: 300},
		},
		{
			{x: 618, y: 146}, {x: 619, y: 146}, {x: 620, y: 145}, {x: 622, y: 145}, {x: 625, y: 144}, {x: 630, y: 142}, {x: 634, y: 141}, {x: 642, y: 138}, {x: 650, y: 135}, {x: 659, y: 133}, {x: 670, y: 130}, {x: 675, y: 129}, {x: 684, y: 126}, {x: 693, y: 123}, {x: 702, y: 120}, {x: 716, y: 115}, {x: 721, y: 114}, {x: 728, y: 111}, {x: 735, y: 108}, {x: 741, y: 106}, {x: 746, y: 104}, {x: 751, y: 102}, {x: 756, y: 101}, {x: 761, y: 100}, {x: 765, y: 99}, {x: 769, y: 99}, {x: 773, y: 99}, {x: 775, y: 99}, {x: 779, y: 99}, {x: 782, y: 99}, {x: 784, y: 99}, {x: 787, y: 99}, {x: 789, y: 99}, {x: 791, y: 99}, {x: 793, y: 99}, {x: 796, y: 99}, {x: 799, y: 99}, {x: 801, y: 99}, {x: 803, y: 99}, {x: 805, y: 99}, {x: 807, y: 99}, {x: 809, y: 99}, {x: 811, y: 100}, {x: 813, y: 100}, {x: 814, y: 100}, {x: 815, y: 100}, {x: 816, y: 100}, {x: 818, y: 100}, {x: 818, y: 101}, {x: 819, y: 101}, {x: 820, y: 101}, {x: 821, y: 101}, {x: 822, y: 102}, {x: 823, y: 103}, {x: 824, y: 103}, {x: 824, y: 104}, {x: 824, y: 105}, {x: 825, y: 105}, {x: 825, y: 107}, {x: 825, y: 108}, {x: 826, y: 110}, {x: 826, y: 112}, {x: 826, y: 113}, {x: 827, y: 115}, {x: 827, y: 117}, {x: 827, y: 118}, {x: 827, y: 120}, {x: 828, y: 121}, {x: 828, y: 123}, {x: 828, y: 126}, {x: 829, y: 129}, {x: 829, y: 130}, {x: 829, y: 132}, {x: 829, y: 135}, {x: 829, y: 137}, {x: 829, y: 139}, {x: 830, y: 141}, {x: 830, y: 143}, {x: 830, y: 144}, {x: 830, y: 145}, {x: 830, y: 147}, {x: 830, y: 148}, {x: 830, y: 149}, {x: 830, y: 150}, {x: 830, y: 151}, {x: 830, y: 152}, {x: 830, y: 153}, {x: 830, y: 154}, {x: 830, y: 155}, {x: 830, y: 156}, {x: 830, y: 157}, {x: 830, y: 158}, {x: 829, y: 158}, {x: 829, y: 159}, {x: 829, y: 160}, {x: 829, y: 161}, {x: 829, y: 162}, {x: 828, y: 162}, {x: 828, y: 163}, {x: 828, y: 164}, {x: 827, y: 165}, {x: 827, y: 166}, {x: 826, y: 167}, {x: 826, y: 168}, {x: 826, y: 169}, {x: 825, y: 169}, {x: 825, y: 170}, {x: 824, y: 170}, {x: 824, y: 171}, {x: 823, y: 171}, {x: 823, y: 172}, {x: 822, y: 172},
		},
		{
			{x: 815, y: 40}, {x: 815, y: 41}, {x: 815, y: 43}, {x: 816, y: 45}, {x: 817, y: 47}, {x: 817, y: 49}, {x: 819, y: 50}, {x: 819, y: 52}, {x: 820, y: 54}, {x: 821, y: 56}, {x: 822, y: 57}, {x: 822, y: 59}, {x: 823, y: 60}, {x: 823, y: 61}, {x: 823, y: 62}, {x: 824, y: 62}, {x: 824, y: 64}, {x: 824, y: 65}, {x: 825, y: 66}, {x: 825, y: 67}, {x: 826, y: 68}, {x: 826, y: 70}, {x: 827, y: 71}, {x: 828, y: 73}, {x: 829, y: 74}, {x: 830, y: 76}, {x: 831, y: 78}, {x: 832, y: 80}, {x: 833, y: 82}, {x: 834, y: 85}, {x: 835, y: 88}, {x: 836, y: 90}, {x: 837, y: 92}, {x: 839, y: 95}, {x: 840, y: 98}, {x: 841, y: 101}, {x: 842, y: 105}, {x: 843, y: 109}, {x: 844, y: 114}, {x: 845, y: 118}, {x: 846, y: 124}, {x: 848, y: 129}, {x: 848, y: 134}, {x: 849, y: 140}, {x: 850, y: 145}, {x: 852, y: 151}, {x: 852, y: 157}, {x: 853, y: 163}, {x: 854, y: 169}, {x: 854, y: 176}, {x: 855, y: 182}, {x: 855, y: 189}, {x: 856, y: 195}, {x: 856, y: 200}, {x: 856, y: 206}, {x: 856, y: 212}, {x: 856, y: 217}, {x: 856, y: 222}, {x: 856, y: 227}, {x: 856, y: 232}, {x: 856, y: 238}, {x: 856, y: 243}, {x: 856, y: 248}, {x: 856, y: 253}, {x: 856, y: 258}, {x: 856, y: 263}, {x: 856, y: 267}, {x: 856, y: 271}, {x: 856, y: 273}, {x: 856, y: 278}, {x: 856, y: 279}, {x: 856, y: 281}, {x: 856, y: 283}, {x: 856, y: 285}, {x: 856, y: 286}, {x: 856, y: 288}, {x: 856, y: 289}, {x: 856, y: 290}, {x: 856, y: 292}, {x: 856, y: 293}, {x: 856, y: 295}, {x: 856, y: 296}, {x: 856, y: 298}, {x: 856, y: 299}, {x: 856, y: 301}, {x: 856, y: 302}, {x: 856, y: 304}, {x: 856, y: 306}, {x: 856, y: 310}, {x: 856, y: 311}, {x: 856, y: 314}, {x: 856, y: 317}, {x: 856, y: 319}, {x: 856, y: 322}, {x: 856, y: 326}, {x: 856, y: 329}, {x: 856, y: 333}, {x: 856, y: 341}, {x: 856, y: 347}, {x: 856, y: 352}, {x: 856, y: 358}, {x: 856, y: 362}, {x: 856, y: 367},
		},
		{
			{x: 306, y: 71}, {x: 306, y: 72}, {x: 306, y: 74}, {x: 306, y: 75}, {x: 306, y: 77}, {x: 306, y: 78}, {x: 307, y: 79}, {x: 307, y: 80}, {x: 307, y: 81}, {x: 308, y: 82}, {x: 308, y: 83}, {x: 308, y: 84}, {x: 309, y: 86}, {x: 309, y: 88}, {x: 309, y: 90}, {x: 310, y: 92}, {x: 310, y: 94}, {x: 311, y: 96}, {x: 311, y: 98}, {x: 312, y: 100}, {x: 312, y: 102}, {x: 313, y: 104}, {x: 313, y: 106}, {x: 313, y: 107}, {x: 314, y: 109}, {x: 314, y: 111}, {x: 315, y: 113}, {x: 315, y: 114}, {x: 315, y: 116}, {x: 316, y: 118}, {x: 316, y: 122}, {x: 317, y: 124}, {x: 317, y: 126}, {x: 317, y: 127}, {x: 318, y: 130}, {x: 318, y: 132}, {x: 318, y: 134}, {x: 319, y: 136}, {x: 319, y: 138}, {x: 320, y: 141}, {x: 320, y: 143}, {x: 320, y: 144}, {x: 321, y: 146}, {x: 321, y: 148}, {x: 322, y: 150}, {x: 322, y: 152}, {x: 322, y: 154}, {x: 323, y: 155}, {x: 323, y: 156}, {x: 323, y: 157}, {x: 324, y: 158}, {x: 324, y: 159}, {x: 324, y: 160}, {x: 325, y: 162}, {x: 325, y: 163}, {x: 326, y: 166}, {x: 326, y: 167}, {x: 326, y: 168}, {x: 327, y: 170}, {x: 327, y: 172}, {x: 327, y: 174}, {x: 328, y: 175}, {x: 328, y: 177}, {x: 328, y: 178}, {x: 329, y: 180}, {x: 329, y: 182}, {x: 329, y: 183}, {x: 330, y: 184}, {x: 330, y: 185}, {x: 330, y: 186}, {x: 331, y: 188}, {x: 331, y: 189}, {x: 332, y: 190}, {x: 332, y: 191}, {x: 332, y: 192}, {x: 332, y: 193}, {x: 333, y: 194}, {x: 333, y: 196}, {x: 333, y: 197}, {x: 334, y: 199}, {x: 334, y: 201}, {x: 335, y: 202}, {x: 335, y: 204}, {x: 335, y: 206}, {x: 336, y: 207}, {x: 336, y: 209}, {x: 337, y: 210}, {x: 337, y: 212}, {x: 338, y: 214}, {x: 338, y: 216}, {x: 339, y: 218}, {x: 339, y: 219}, {x: 340, y: 221}, {x: 340, y: 223}, {x: 341, y: 225}, {x: 341, y: 226}, {x: 342, y: 228}, {x: 342, y: 230}, {x: 343, y: 232}, {x: 343, y: 234}, {x: 344, y: 236}, {x: 344, y: 237}, {x: 345, y: 239}, {x: 346, y: 241}, {x: 346, y: 243}, {x: 347, y: 245}, {x: 347, y: 246}, {x: 348, y: 248}, {x: 348, y: 249}, {x: 349, y: 250}, {x: 349, y: 251}, {x: 349, y: 252}, {x: 350, y: 253}, {x: 350, y: 254}, {x: 351, y: 255}, {x: 351, y: 256}, {x: 352, y: 256}, {x: 352, y: 257}, {x: 352, y: 258}, {x: 352, y: 259}, {x: 353, y: 259}, {x: 353, y: 260}, {x: 353, y: 261}, {x: 353, y: 262}, {x: 353, y: 263}, {x: 354, y: 264}, {x: 354, y: 265}, {x: 354, y: 266}, {x: 355, y: 267}, {x: 355, y: 268}, {x: 355, y: 269}, {x: 355, y: 270}, {x: 355, y: 271}, {x: 356, y: 272}, {x: 356, y: 273}, {x: 356, y: 274}, {x: 356, y: 275}, {x: 356, y: 276}, {x: 357, y: 277}, {x: 357, y: 278}, {x: 357, y: 279}, {x: 357, y: 280}, {x: 357, y: 281}, {x: 357, y: 282}, {x: 357, y: 283}, {x: 357, y: 284}, {x: 357, y: 285}, {x: 357, y: 286}, {x: 357, y: 287}, {x: 357, y: 288}, {x: 358, y: 288}, {x: 358, y: 289}, {x: 358, y: 290}, {x: 358, y: 292}, {x: 358, y: 293}, {x: 358, y: 294}, {x: 358, y: 295}, {x: 358, y: 296}, {x: 358, y: 297}, {x: 358, y: 298}, {x: 358, y: 299}, {x: 358, y: 300}, {x: 359, y: 301}, {x: 359, y: 302}, {x: 359, y: 303}, {x: 359, y: 304}, {x: 359, y: 305}, {x: 359, y: 306},
		},
		{
			{x: 705, y: 245}, {x: 707, y: 245}, {x: 710, y: 245}, {x: 718, y: 245}, {x: 724, y: 245}, {x: 728, y: 245}, {x: 736, y: 245}, {x: 742, y: 245}, {x: 750, y: 245}, {x: 757, y: 247}, {x: 764, y: 249}, {x: 771, y: 250}, {x: 776, y: 252}, {x: 781, y: 253}, {x: 784, y: 254}, {x: 786, y: 254}, {x: 791, y: 256}, {x: 793, y: 256}, {x: 795, y: 257}, {x: 798, y: 258}, {x: 800, y: 258}, {x: 803, y: 259}, {x: 804, y: 260}, {x: 806, y: 260}, {x: 808, y: 261}, {x: 810, y: 261}, {x: 811, y: 262}, {x: 813, y: 263}, {x: 814, y: 263}, {x: 815, y: 264}, {x: 816, y: 265}, {x: 817, y: 265}, {x: 817, y: 266}, {x: 817, y: 267}, {x: 817, y: 268}, {x: 817, y: 269}, {x: 817, y: 270}, {x: 817, y: 271}, {x: 817, y: 272}, {x: 817, y: 274}, {x: 816, y: 275}, {x: 814, y: 278}, {x: 812, y: 279}, {x: 810, y: 280}, {x: 807, y: 283}, {x: 803, y: 284}, {x: 799, y: 286}, {x: 789, y: 289}, {x: 781, y: 291}, {x: 772, y: 293}, {x: 762, y: 294}, {x: 750, y: 296}, {x: 728, y: 297}, {x: 713, y: 298}, {x: 704, y: 298}, {x: 687, y: 298}, {x: 670, y: 298}, {x: 655, y: 298}, {x: 648, y: 298}, {x: 636, y: 298}, {x: 627, y: 298}, {x: 619, y: 298}, {x: 616, y: 298}, {x: 611, y: 298}, {x: 607, y: 298}, {x: 604, y: 298}, {x: 601, y: 298}, {x: 599, y: 298}, {x: 597, y: 298}, {x: 595, y: 298}, {x: 594, y: 298}, {x: 592, y: 299}, {x: 591, y: 299}, {x: 589, y: 299}, {x: 588, y: 299}, {x: 587, y: 299}, {x: 586, y: 299},
		},
		{
			{x: 899, y: 337}, {x: 899, y: 338}, {x: 898, y: 340}, {x: 897, y: 342}, {x: 896, y: 344}, {x: 895, y: 346}, {x: 894, y: 349}, {x: 893, y: 350}, {x: 891, y: 354}, {x: 890, y: 357}, {x: 889, y: 360}, {x: 888, y: 363}, {x: 887, y: 366}, {x: 886, y: 369}, {x: 886, y: 371}, {x: 886, y: 374}, {x: 886, y: 376}, {x: 886, y: 377}, {x: 886, y: 379}, {x: 886, y: 380}, {x: 886, y: 381}, {x: 886, y: 382}, {x: 886, y: 384}, {x: 886, y: 385}, {x: 886, y: 386}, {x: 887, y: 387}, {x: 888, y: 389}, {x: 888, y: 390}, {x: 888, y: 391}, {x: 889, y: 392}, {x: 889, y: 394}, {x: 889, y: 395}, {x: 890, y: 396}, {x: 890, y: 398}, {x: 890, y: 399}, {x: 891, y: 401}, {x: 891, y: 403}, {x: 892, y: 404}, {x: 892, y: 406}, {x: 892, y: 407}, {x: 892, y: 408}, {x: 892, y: 409}, {x: 892, y: 410}, {x: 892, y: 411}, {x: 892, y: 412}, {x: 892, y: 413}, {x: 893, y: 413}, {x: 893, y: 414}, {x: 893, y: 415}, {x: 894, y: 416}, {x: 894, y: 418}, {x: 895, y: 419}, {x: 896, y: 422}, {x: 897, y: 424}, {x: 898, y: 427}, {x: 899, y: 428}, {x: 900, y: 431}, {x: 901, y: 433}, {x: 901, y: 435}, {x: 902, y: 436}, {x: 902, y: 438}, {x: 903, y: 439}, {x: 903, y: 440}, {x: 904, y: 440},
		},
		{
			{x: 735, y: 261}, {x: 737, y: 261}, {x: 743, y: 261}, {x: 750, y: 261}, {x: 758, y: 261}, {x: 778, y: 261}, {x: 797, y: 264}, {x: 820, y: 269}, {x: 845, y: 274}, {x: 874, y: 280}, {x: 887, y: 283}, {x: 912, y: 288}, {x: 935, y: 293}, {x: 957, y: 296}, {x: 964, y: 298}, {x: 979, y: 300}, {x: 990, y: 301}, {x: 998, y: 302}, {x: 1001, y: 303}, {x: 1007, y: 303}, {x: 1011, y: 304}, {x: 1014, y: 304}, {x: 1016, y: 304}, {x: 1018, y: 304}, {x: 1019, y: 304}, {x: 1020, y: 304}, {x: 1021, y: 304}, {x: 1022, y: 304}, {x: 1023, y: 304}, {x: 1025, y: 304}, {x: 1027, y: 305}, {x: 1029, y: 305}, {x: 1030, y: 306}, {x: 1032, y: 306}, {x: 1034, y: 306}, {x: 1036, y: 307}, {x: 1037, y: 307}, {x: 1038, y: 308}, {x: 1039, y: 308},
		},
		{
			{x: 1008, y: 393}, {x: 1008, y: 394}, {x: 1009, y: 397}, {x: 1011, y: 400}, {x: 1012, y: 404}, {x: 1014, y: 408}, {x: 1016, y: 413}, {x: 1018, y: 419}, {x: 1020, y: 424}, {x: 1022, y: 430}, {x: 1024, y: 436}, {x: 1026, y: 441}, {x: 1027, y: 446}, {x: 1029, y: 451}, {x: 1031, y: 455}, {x: 1032, y: 459}, {x: 1033, y: 463}, {x: 1035, y: 467}, {x: 1037, y: 471}, {x: 1039, y: 475}, {x: 1041, y: 479}, {x: 1043, y: 483}, {x: 1043, y: 484}, {x: 1045, y: 488}, {x: 1046, y: 490}, {x: 1048, y: 492}, {x: 1049, y: 494}, {x: 1050, y: 496}, {x: 1051, y: 498}, {x: 1053, y: 499}, {x: 1054, y: 501}, {x: 1055, y: 503}, {x: 1056, y: 504}, {x: 1057, y: 506}, {x: 1057, y: 507}, {x: 1058, y: 508}, {x: 1059, y: 509}, {x: 1059, y: 510}, {x: 1060, y: 510}, {x: 1060, y: 511}, {x: 1060, y: 512}, {x: 1060, y: 513}, {x: 1059, y: 514}, {x: 1059, y: 515}, {x: 1058, y: 516}, {x: 1057, y: 517}, {x: 1056, y: 518}, {x: 1055, y: 519}, {x: 1055, y: 520}, {x: 1054, y: 520}, {x: 1054, y: 521}, {x: 1053, y: 521}, {x: 1053, y: 522},
		},
		{
			{x: 656, y: 316}, {x: 657, y: 316}, {x: 658, y: 316}, {x: 659, y: 316}, {x: 661, y: 316}, {x: 663, y: 316}, {x: 667, y: 316}, {x: 674, y: 316}, {x: 681, y: 316}, {x: 688, y: 318}, {x: 699, y: 321}, {x: 718, y: 327}, {x: 736, y: 333}, {x: 756, y: 338}, {x: 779, y: 345}, {x: 806, y: 352}, {x: 833, y: 359}, {x: 853, y: 365}, {x: 879, y: 373}, {x: 890, y: 376}, {x: 909, y: 383}, {x: 928, y: 390}, {x: 946, y: 396}, {x: 962, y: 401}, {x: 975, y: 404}, {x: 988, y: 407}, {x: 1001, y: 409}, {x: 1013, y: 411}, {x: 1018, y: 412}, {x: 1027, y: 414}, {x: 1035, y: 415}, {x: 1043, y: 416}, {x: 1049, y: 418}, {x: 1054, y: 419}, {x: 1059, y: 420}, {x: 1063, y: 421}, {x: 1064, y: 421}, {x: 1067, y: 422}, {x: 1070, y: 423}, {x: 1072, y: 424}, {x: 1073, y: 424}, {x: 1073, y: 425}, {x: 1074, y: 426}, {x: 1075, y: 426}, {x: 1076, y: 426}, {x: 1076, y: 427}, {x: 1077, y: 427}, {x: 1078, y: 427}, {x: 1079, y: 427}, {x: 1080, y: 427}, {x: 1081, y: 427}, {x: 1082, y: 427}, {x: 1083, y: 427}, {x: 1084, y: 427},
		},
		{
			{x: 506, y: 505}, {x: 506, y: 504}, {x: 506, y: 501}, {x: 506, y: 500}, {x: 506, y: 498}, {x: 506, y: 495}, {x: 507, y: 492}, {x: 507, y: 491}, {x: 508, y: 489}, {x: 509, y: 487}, {x: 510, y: 485}, {x: 511, y: 483}, {x: 512, y: 482}, {x: 513, y: 481}, {x: 513, y: 480}, {x: 514, y: 479}, {x: 515, y: 478}, {x: 516, y: 477}, {x: 516, y: 476}, {x: 517, y: 476}, {x: 517, y: 475}, {x: 518, y: 475}, {x: 518, y: 474}, {x: 519, y: 473}, {x: 520, y: 473}, {x: 521, y: 472}, {x: 522, y: 472}, {x: 523, y: 471}, {x: 524, y: 471}, {x: 525, y: 471}, {x: 526, y: 470}, {x: 527, y: 470}, {x: 528, y: 470}, {x: 529, y: 470}, {x: 530, y: 469}, {x: 531, y: 469}, {x: 532, y: 469}, {x: 533, y: 469}, {x: 534, y: 469}, {x: 534, y: 468}, {x: 533, y: 468}, {x: 531, y: 466}, {x: 530, y: 465}, {x: 527, y: 463}, {x: 526, y: 463}, {x: 524, y: 461}, {x: 522, y: 460}, {x: 521, y: 459}, {x: 519, y: 458}, {x: 518, y: 457}, {x: 516, y: 455}, {x: 515, y: 455}, {x: 514, y: 454}, {x: 513, y: 453},
		},
		{
			{x: 894, y: 293}, {x: 894, y: 291}, {x: 895, y: 289}, {x: 897, y: 287}, {x: 899, y: 285}, {x: 901, y: 283}, {x: 904, y: 281}, {x: 909, y: 278}, {x: 914, y: 275}, {x: 918, y: 272}, {x: 923, y: 270}, {x: 929, y: 269}, {x: 940, y: 267}, {x: 949, y: 267}, {x: 957, y: 267}, {x: 967, y: 267}, {x: 978, y: 271}, {x: 988, y: 276}, {x: 993, y: 279}, {x: 1001, y: 285}, {x: 1009, y: 290}, {x: 1011, y: 292}, {x: 1016, y: 296}, {x: 1019, y: 299}, {x: 1022, y: 301}, {x: 1023, y: 302}, {x: 1024, y: 303}, {x: 1025, y: 304}, {x: 1026, y: 305},
		},
	}
	idx := RandInt64(int64(len(trajectory)))
	one := trajectory[idx]
	return chromedp.ActionFunc(func(ctx context.Context) error {
		for _, dot := range one {
			// _ = MouseMoveTo(dot.x, dot.y).Do(ctx)
			_ = input.DispatchMouseEvent(input.MouseMoved, dot.x, dot.y).Do(ctx)
			_ = chromedp.Sleep(time.Duration(RandInt64(5)) * time.Millisecond).Do(ctx) // 添加随机延迟
		}
		return nil
	})
}

func MoveMouse(x, y, x1, y1 float64) chromedp.Action {
	return chromedp.ActionFunc(func(ctx context.Context) error {
		var (
			dot       = float64(5)
			distance  = math.Sqrt(math.Pow(x1-x, 2) + math.Pow(y1-y, 2)) // 两点之间距离
			times     = distance / dot                                   // 假定每15px停顿1次，计算停顿总次数
			times2Int = int64(times)
			// dotK      = math.Abs(x1 - x/y1 - y) // 已知两点之间的斜率
		)

		_ = input.DispatchMouseEvent(input.MouseMoved, x, y).Do(ctx)
		// 正常人移动鼠标速率： 0~1像素/毫秒
		for i := int64(0); i <= times2Int; i++ {
			dotDuration := RandFloat64MinMax(1, 20)             // 移动两点之间间隔时长随机1~50毫秒内
			needDistance := dotDuration * pseudoRandFloat64()   // 本次需移动的距离 -- 对三角而言是斜边距离
			x2range := math.Sqrt(math.Pow(needDistance, 2) / 2) // 按45°斜率计算移动后的坐标
			y2range := x2range + RandFloat64MinMax(0, 10)       // 纵坐标抖动以调整变动下斜率
			_ = input.DispatchMouseEvent(input.MouseMoved, x+x2range, y+y2range).Do(ctx)
			_ = chromedp.Sleep(time.Duration(RandInt64(50)) * time.Millisecond).Do(ctx) // 添加随机延迟
			x = x + x2range
			y = y + y2range

			// 移动的点距离终点横坐标 or 纵坐标 相差距离小于10px终止
			if math.Abs(x-x1) <= 10 || math.Abs(y-y1) <= 10 {
				break
			}
		}
		_ = input.DispatchMouseEvent(input.MouseMoved, x1, y1).Do(ctx)

		fmt.Println(distance)
		return nil
	})
}

// RandomKeyDown 随机按下键盘上一个按键
func RandomKeyDown() chromedp.Action {
	return chromedp.ActionFunc(func(ctx context.Context) error {
		var (
			keys = strings.Split("`1234567890-=qwertyuiop[]\\asdfghjkl;'zxcvbnm,./", "")
			idx  = RandInt64(int64(len(keys)))
		)
		_ = chromedp.KeyEvent(keys[idx]).Do(ctx)
		_ = chromedp.Sleep(time.Duration(RandInt64(400)) * time.Millisecond).Do(ctx) // 添加随机延迟

		return nil
	})
}

// KeyDownESC 按下键盘ESC键
func KeyDownESC() chromedp.Action {
	return chromedp.ActionFunc(func(ctx context.Context) error {
		_ = chromedp.KeyEvent(kb.Escape).Do(ctx)
		_ = chromedp.Sleep(time.Duration(RandInt64(400)) * time.Millisecond).Do(ctx) // 添加随机延迟
		return nil
	})
}

// SleepRand 随机休眠 [min, max) 范围内秒
func SleepRand(min, max int64) chromedp.Action {
	return chromedp.Sleep(RandInt64MinMaxDuration(min, max))
}

// disableAutomationDetect 禁用获取 navigator.webdriver 值
func disableAutomationDetect() chromedp.Action {
	return chromedp.ActionFunc(func(cxt context.Context) error {
		_, err := page.AddScriptToEvaluateOnNewDocument("Object.defineProperty(navigator, 'webdriver', { get: () => false, });").Do(cxt)
		if err != nil {
			return err
		}
		return nil
	})
}
